@use "extern/radix-ui-colors.scss" as *;
@use "theme.scss" as *;
@import url('https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300..800;1,300..800&display=swap');

$uiFont: "Open Sans";

// === BASE STYLES ===

html {
    height: 100%;
    margin: 0;
    padding: 0;
}

body {
    font-family: $uiFont, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", sans-serif;
    margin: 0;
    padding: 0;
    // height: 100vh;
    // overflow: hidden;
}

a {
    color: unset;
}

// === COMPONENTS ===

// === NAV ===

nav.navbar {
    height: 32px;
    background-color: $bgColorSubtle;
    border-bottom: $borderSubtle;
    display: flex;
    align-items: center;
    padding: 0 8px;
    flex-shrink: 0;
    font-size: 0.875em;

    ul {
        list-style-type: none;
        padding: 0;
        margin: 0;
        display: flex;
        align-items: center;
    }

    ul li {
        display: inline;
        // margin-right: 8px;

        a {
            text-decoration: none;
            color: $gray-9;
            font-weight: 400;
            border-radius: 4px;
            padding: 2px 8px;

            &:hover {
                color: $gray-10;
                background-color: $gray-3;
            }
        }
    }
}


// === LAYOUT ===

// layout right below body
.layout-outer {
    height: 100vh;
    display: flex;
    flex-direction: column;
}

// Full width layout for stuff that do not have side-by-side split
.layout-content {
    max-width: $content-max-width;
    margin: 0 auto;
    padding: 32px 16px;
}

// Main document layout styles
.text-document-layout {
    display: flex;
    flex: 1;
    // overflow: hidden;
}

.text-document-layout__left-panel {
    flex: 1;
    overflow-y: auto;

}

.text-document-layout__left-panel_content {
    max-width: $text-doc-max-width;
    padding: 32px 16px;
    margin: 0 auto;

}

// === SIDEBAR ===

// Resizable Sidebar Component Styles
.resizable-sidebar {
    min-width: 200px;
    max-width: 800px;
    background-color: $gray-2;
    border-left: 1px solid $gray-6;
    position: sticky;
    top: 0;
    bottom: 0;
    min-height: 60vh;
    max-height: 100vh;
}

.resizable-sidebar--collapsed {
    width: 30px;
    background-color: $gray-2;
    border-left: 1px solid $gray-6;
    display: flex;
    align-items: flex-start;
    height: 100%;
}


.resizable-sidebar__header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 12px;
    border-bottom: 1px solid $gray-6;
    background-color: $gray-3;
    flex-shrink: 0;
}


.resizable-sidebar__sections {
    flex: 1;
    overflow-y: auto;
}

.resizable-sidebar__resize-handle {
    position: absolute;
    left: 0;
    top: 0;
    width: 2px;
    height: 100%;
    background-color: $colorHover;
    cursor: col-resize;
}

.resizable-sidebar__content {
    padding: 0 12px;
    padding: 0;
    height: 100%;
    display: flex;
    flex-direction: column;

}

// .resizable-sidebar__header {
//     display: flex;
//     justify-content: space-between;
//     align-items: center;
//     margin-bottom: 12px;
//     padding-bottom: 8px;
//     border-bottom: 1px solid $gray-6;
// }



// === DEBUG ===

pre.dbg-json-pre {
    text-wrap: auto;
    margin: 10px;
}

.dbg-on {
    span.sentence-span {
        // border: 1px inset rgb(160, 15, 15);
        padding-block: 2px;
    }

    span.document-whitespace-span {
        // border: 1px dotted rgb(186, 166, 166);
    }

    span.single-token-span {
        // border: 1px inset #bfdbfe;
    }

    span.phrase-span {
        // border: 2px solid #05a239;
        padding-block: 1px;
    }

    span.sentence-whitespace-span {
        // border: 1px dotted #38bdf8;
    }

    span.sentence-punctuation-span {
        // border: 1px solid #ff0000;
    }
}

// === TEXT VIEWER ===

.annotated-doc-div {
    border-top: 1px solid $gray-6;
    border-bottom: 1px solid $gray-6;
    padding-top: 10px;
    padding-bottom: 10px;
    line-height: 3.2;
    user-select: none;
    white-space: preserve;
}

.annotated-text-container {
    user-select: none;
}

// === TOKENS ===

span.tkn-unmarked {
    background: $colorUnmarked;
}

span.tkn-ignored {
    background: $colorIgnored;
}

span.tkn-l1 {
    background: $colorL1;
}

span.tkn-l2 {
    background: $colorL2;
}

span.tkn-l3 {
    background: $colorL3;
}

span.tkn-l4 {
    background: $colorL4;
}

span.tkn-l5 {
    background: $colorL5;
}

span.tkn-known {
    background: $colorKnown;
}

span.tkn-nostatus {
    background: $unreachable-color;
}

span.tkn-focus {
    text-decoration: underline;
}

span.clickable-tkn-span {
    &:hover {
        cursor: pointer;
    }
}

.dbg-unreachable {
    background-color: $unreachable-color;
}

.dbg-todo {
    background-color: $colorDebugTodo;
}

// === TOAST STUFF ===

.toast-tray {
    position: fixed;
    left: 8px;
    bottom: 8px;
    z-index: 9999;
}

.toast {
    box-sizing: content-box;
    display: flex;
    box-shadow: $card-ish-shadow;
    align-items: center;
    justify-content: space-between;
    position: relative;
    width: 16em;
    border: $borderSubtle;
    padding: 8px 16px;
    background-color: $white;
    color: $black;
    border-radius: $border-radius;
}

.toast--spaced {
    margin-bottom: 1em;
}

// === TEXT RENDERING ===

.double-ruby {
    position: relative;
    display: inline;
}

.double-ruby.auto-width {
    // JavaScript will set min-width dynamically
    text-align: center;
    box-sizing: border-box;
}

.double-ruby::before {
    content: attr(data-top);
    position: absolute;
    top: -1.2em;
    left: 50%;
    transform: translateX(-50%);
    font-size: 0.6em;
    color: $violet-10;
    font-weight: 500;
    line-height: 1.2;
    white-space: nowrap;
    pointer-events: none;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: var(--annotation-max-width, 100%);
}

.double-ruby::after {
    content: attr(data-bottom);
    position: absolute;
    bottom: -1.2em;
    left: 50%;
    transform: translateX(-50%);
    font-size: 0.6em;
    color: $red-10;
    line-height: 1.2;
    white-space: nowrap;
    pointer-events: none;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: var(--annotation-max-width, 100%);
}

.double-ruby:not([data-top])::before,
.double-ruby[data-top=""]::before {
    display: none;
}

.double-ruby:not([data-bottom])::after,
.double-ruby[data-bottom=""]::after {
    display: none;
}

// === HOVER DICT ===

.popup-container {
    pointer-events: none;
    /* Allow clicks to pass through the container */
    // background-color: white;
    // border: #999;
}

.popup-content {
    background: $background;
    border: 1px solid $gray-6;
    border-radius: $border-radius;
    box-shadow: $card-ish-shadow;
    padding: 8px 12px;
    max-width: 300px;
    font-size: 14px;
    line-height: 1.4;
    pointer-events: auto;
    /* Re-enable pointer events for the content */
}

.popup-content .popup-field {
    margin-bottom: 4px;
}

.popup-content .popup-field:last-child {
    margin-bottom: 0;
}

.popup-content .popup-label {
    font-weight: bold;
    color: $gray-10;
    font-size: 12px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.popup-content .popup-value {
    color: $foreground;
    margin-top: 2px;
}

.popup-content .popup-definition {
    color: $violet-10;
    font-weight: 500;
}

.popup-content .popup-pos {
    color: $amber-10;
    font-style: italic;
}

.popup-content .popup-lemma {
    color: $green-10;
}

// === Collapsible Section ===

.collapsible-section {
    margin-bottom: 0;
}

.collapsible-section__header {
    // background-color: $gray-3;
    padding: 8px 16px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: space-between;
    border-bottom: 1px solid $gray-5;
}

.collapsible-section__header--expanded {
    border-bottom: 1px solid $gray-5;
}

.collapsible-section__title {
    // font-weight: bold;
    // font-size: 14px;
}

.collapsible-section__toggle-icon {
    // font-size: 12px;
}

.collapsible-section__content {
    padding: 16px;
    // border-bottom: 1px solid $gray-5;
}

// === HTML CONTENT PLACEHOLDERS ===

.html-content-placeholder {
    min-height: 20px;
    font-style: italic;
    color: $gray-9;
    background-color: $bgColorSubtle;
    padding: 4px 8px;
    border-radius: 4px;
    border: 1px dashed $borderColorSubtle;
}